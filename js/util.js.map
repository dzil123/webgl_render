{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/util.ts"],"names":[],"mappings":"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","sourcesContent":["export function sleep(sec: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, sec * 1000));\n}\n\nexport function frame(): Promise<DOMHighResTimeStamp> {\n  return new Promise((resolve) => requestAnimationFrame(resolve));\n}\n\nexport async function mainloop(callback: () => void) {\n  const fps_element = nonnull(document.getElementById(\"fps\"));\n  const fps_avg_element = nonnull(document.getElementById(\"fps_avg\"));\n  let then = 0;\n  let then_then = 0;\n  let counter = 0;\n  const avg_len = 60;\n\n  while (true) {\n    await sleep(0.03);\n    const now = (await frame()) / 1000;\n\n    const delta = now - then;\n    then = now;\n    const fps = 1.0 / delta;\n    const fps_str = fps.toFixed(2);\n    fps_element.innerText = fps_str;\n\n    counter += 1;\n    if (counter >= avg_len) {\n      counter = 0;\n      const delta = now - then_then;\n      then_then = now;\n      const fps = avg_len / delta;\n      const fps_str = fps.toFixed(2);\n      fps_avg_element.innerText = fps_str;\n    }\n\n    callback();\n  }\n}\n\nexport function nonnull<T>(v: T): NonNullable<T> {\n  if (v === undefined || v === null) {\n    throw new Error(\"unexpected null\");\n  }\n  return v;\n}\n\nexport function new_globals<K, V>(): (key: K) => V[] {\n  type Storage = [K, V[]];\n\n  const storage: Storage[] = [];\n\n  const get = (key: K) => {\n    for (const item of storage) {\n      if (item[0] === key) {\n        return item[1];\n      }\n    }\n\n    const item: Storage = [key, []];\n    storage.push(item);\n    return item[1];\n  };\n\n  return get;\n}\n\nexport async function download<T>(\n  subdir: string,\n  url: string,\n  callback: (r: Response) => Promise<T>,\n): Promise<T> {\n  if (!url.startsWith(\"data:\")) {\n    url = subdir + url;\n  }\n  const response = await fetch(url);\n  if (!response.ok) {\n    throw new Error(\n      `Failed to download ${url}: ${response.status} ${response.statusText}`,\n    );\n  }\n\n  const data = await callback(response);\n\n  return data;\n}\n"]}