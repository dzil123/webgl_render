{"version":3,"file":"webgl.js","sourceRoot":"","sources":["../../src/webgl.ts"],"names":[],"mappings":"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","sourcesContent":["/// <reference path=\"../node_modules/webgl-strict-types/index.d.ts\" />\n\nimport \"../third-party/webgl-lint.js\";\nimport { mat4 } from \"../third-party/gl-matrix/index.js\";\n\nimport * as util from \"./util.js\";\n\nexport import GL = WebGLRenderingContextStrict;\nexport type GL2 = WebGL2RenderingContextStrict &\n  WebGLRenderingContextStrict.Base_OES_element_index_uint; // bug in webgl-strict-types\n\nexport function loadGL(): GL2 {\n  let canvas = document.getElementById(\"canvas\");\n  if (!(canvas instanceof HTMLCanvasElement)) {\n    throw new Error(\"Expected element to be a canvas\");\n  }\n\n  let gl = canvas.getContext(\"webgl2\") as any as GL2;\n  gl = util.nonnull(gl);\n\n  return gl;\n}\n\nfunction typeOfShader(gl: GL2, name: string): GL.ShaderType {\n  if (name.endsWith(\".vert\")) {\n    return gl.VERTEX_SHADER;\n  } else if (name.endsWith(\".frag\")) {\n    return gl.FRAGMENT_SHADER;\n  } else {\n    throw new Error(`Invalid shader name: ${name}`);\n  }\n}\n\nexport async function loadShader(gl: GL2, name: string): Promise<WebGLShader> {\n  let source = await util.download(\"shaders/\", name, (r) => r.text());\n\n  let shader = gl.createShader(typeOfShader(gl, name));\n  shader = util.nonnull(shader);\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  return shader;\n}\n\nfunction textureIndex(i: number): GL.TextureUnit {\n  if (!(Number.isInteger(i) && 0 <= i && i < 32)) {\n    throw new Error(`Texture index ${i} must be 0 <= x < 32`);\n  }\n\n  // @ts-ignore\n  return WebGL2RenderingContext.TEXTURE0 + i;\n}\n\nconst globalTextures = util.new_globals<WebGLProgram, number>();\n\n// creates a f32 vec4 datatexture and returns a function to upload data to it\n// this also sets the uniform on the program, so this program must be active (gl.useProgram) when this is called\nexport function texture(\n  gl: GL2,\n  program: WebGLProgram,\n  name: string,\n  width: number\n): (data: Float32Array) => void {\n  // keep a counter for each program to assign a unique monotonic id for each texture\n  let global_storage = globalTextures(program);\n  if (global_storage.length == 0) {\n    global_storage[0] = 0;\n  } else {\n    global_storage[0] += 1;\n  }\n  let index = util.nonnull(global_storage[0]);\n\n  let unit = textureIndex(index);\n\n  let uniformLocation = gl.getUniformLocation(program, name);\n  if (uniformLocation === null) {\n    console.warn(`unused texture '${name}'`);\n\n    function writeTexture(_: Float32Array) {}\n\n    return writeTexture;\n  }\n\n  let texture = gl.createTexture();\n  texture = util.nonnull(texture);\n\n  gl.activeTexture(unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE);\n\n  gl.uniform1i(uniformLocation, index);\n\n  const rowSize = 4 * width; // 'width' number of vec4s\n\n  return writeTexture;\n\n  function writeTexture(data: Float32Array) {\n    if (!(data.length % rowSize == 0)) {\n      throw new Error(`length of data not divisible by ${rowSize}`);\n    }\n\n    gl.activeTexture(unit);\n\n    const target = gl.TEXTURE_2D;\n    const level = 0;\n    const internalFormat = gl.RGBA32F;\n    const width_ = width;\n    const height = data.length / rowSize;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.FLOAT;\n    const pixels = data;\n    gl.texImage2D(\n      target,\n      level,\n      internalFormat,\n      width_,\n      height,\n      border,\n      format,\n      type,\n      pixels\n    );\n  }\n}\n\nexport function resize(gl: GL2) {\n  let canvas = gl.canvas;\n\n  let dpr = window.devicePixelRatio;\n  dpr = Math.min(dpr, 2);\n  let rect = gl.canvas.getBoundingClientRect();\n\n  let width = Math.round(rect.width * dpr);\n  let height = Math.round(rect.height * dpr);\n\n  if (canvas.width != width || canvas.height != height) {\n    canvas.width = width;\n    canvas.height = height;\n\n    gl.viewport(0, 0, width, height);\n\n    let resolution_element = util.nonnull(document.getElementById(\"res\"));\n    resolution_element.innerText = `${dpr} ${gl.canvas.width} ${gl.canvas.height}`;\n  }\n}\n"]}