{"version":3,"file":"main.js","sourceRoot":"","sources":["../../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import * as util from \"./util.js\";\nimport * as webgl from \"./webgl.js\";\n// import \"./demo.js\";\nimport { ctx } from \"./demo_2d.js\";\n\nconst gl = webgl.loadGL(\"canvas\");\n\nconst program = await webgl.loadProgram(\n  gl,\n  [\"fullscreen_tri.vert\", \"tex.frag\"],\n  [\"mytex\"],\n);\n\nconst _aspect = gl.canvas.width / gl.canvas.height;\n\ngl.clearColor(0.5, 0.5, 0.5, 1.0);\ngl.useProgram(program.glProgram);\n\nconst bw_tex = gl.createTexture();\ngl.activeTexture(gl.TEXTURE3);\ngl.bindTexture(gl.TEXTURE_2D, bw_tex);\n\ngl.texImage2D(\n  gl.TEXTURE_2D,\n  0,\n  gl.RGBA,\n  1,\n  1,\n  0,\n  gl.RGBA,\n  gl.UNSIGNED_BYTE,\n  new Uint8Array([0, 0, 255, 255]),\n);\n\ngl.texImage2D(\n  gl.TEXTURE_2D, // target: GL.TexImage2DTarget\n  0, // level: GLint\n  gl.R8, // internalformat: GL2['R8']\n  // ctx.canvas.width, // width: GLsizei (optional)\n  // ctx.canvas.height, // height: GLsizei (optional)\n  // 0, // border: 0 (optional)\n  gl.RED, // format: GL2['RED']\n  gl.UNSIGNED_BYTE, // type: GL2['UNSIGNED_BYTE']\n  ctx.canvas, // source: TexImageSource\n);\n\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\ngl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE);\n\ngl.uniform1i(program.uniforms.mytex, 3);\n\ngl.enable(gl.DEPTH_TEST);\ngl.enable(gl.BLEND);\n// premultiplied alpha\ngl.blendEquationSeparate(gl.FUNC_ADD, gl.FUNC_ADD);\ngl.blendFuncSeparate(\n  gl.ONE,\n  gl.ONE_MINUS_SRC_ALPHA,\n  gl.ONE,\n  gl.ONE_MINUS_SRC_ALPHA,\n);\n\nawait util.mainloop(() => {\n  webgl.resize(gl);\n\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n  gl.drawArrays(gl.TRIANGLE_STRIP, 0, 3);\n});\n\nfunction _generate_polygon(count: number): [Float32Array, Uint8Array] {\n  const delta_angle = (Math.PI * 2) / count;\n  const start_angle = (Math.PI + delta_angle) * -0.5;\n  const scale = 1.0 / Math.cos(delta_angle * 0.5);\n\n  const array = new Float32Array(count * 2);\n\n  for (let i = 0; i < count; i++) {\n    const angle = start_angle + delta_angle * i;\n    console.log((angle * 180) / Math.PI);\n\n    array[i * 2] = Math.cos(angle) * scale;\n    array[i * 2 + 1] = Math.sin(angle) * scale;\n  }\n\n  console.log(array);\n\n  const indexArray = new Uint8Array((count - 2) * 3);\n  for (let i = 0; i < count; i++) {\n    indexArray[i * 3] = 0;\n    indexArray[i * 3 + 1] = i + 1;\n    indexArray[i * 3 + 2] = i + 2;\n  }\n  console.log(indexArray);\n\n  return [array, indexArray];\n}\n"]}