{"version":3,"file":"websocket.js","sourceRoot":"","sources":["../../src/websocket.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,IAAI,MAAM,WAAW,CAAC;AAElC,MAAM,GAAG,GAAG,qBAAqB,CAAC;AAOlC,IAAI,IAAI,GAAqB,IAAI,CAAC;AAClC,IAAI,aAAa,GAAsB,EAAE,CAAC;AAC1C,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,CAAC;AAE5E,SAAS,gBAAgB,CAAC,QAAuC;IAC/D,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAChC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;AAC3B,CAAC;AAED,SAAS,eAAe,CACtB,WAAmC;IAEnC,OAAO,UAAU,CAAC;IAElB,KAAK,UAAU,UAAU,CAAC,KAAmB;QAC3C,IAAI,KAAK,CAAC,IAAI,YAAY,WAAW,EAAE;YACrC,MAAM,IAAI,KAAK,CAAC,wBAAwB,CAAC,CAAC;SAC3C;QAED,IAAI,QAAgB,CAAC;QACrB,IAAI,KAAK,CAAC,IAAI,YAAY,IAAI,EAAE;YAC9B,QAAQ,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;SACpC;aAAM;YACL,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC;SACvB;QAED,IAAI,IAAI,GAAW,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAExC,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACtD,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC;QAEpC,WAAW,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;AACH,CAAC;AAED,KAAK,UAAU,OAAO;IACpB,WAAW,CAAC,SAAS,GAAG,uBAAuB,CAAC;IAChD,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IACvB,gBAAgB,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;AACnD,CAAC;AAED,KAAK,UAAU,QAAQ;IACrB,WAAW,CAAC,SAAS,GAAG,eAAe,CAAC;IAExC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAC1B,CAAC;AAED,KAAK,UAAU,QAAQ,CAAC,KAAY;IAClC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/C,gBAAgB,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;AAClD,CAAC;AAED,MAAM,UAAU,QAAQ,CACtB,eAAuC;IAEvC,IAAI,IAAI,KAAK,IAAI,EAAE;QACjB,IAAI,CAAC,KAAK,EAAE,CAAC;KACd;IAED,IAAI,OAAO,GAAG,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAClD,aAAa,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,IAAI,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,CAAC;IAE1B,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,eAAe,CAAC,eAAe,CAAC,CAAC,CAAC;IACnE,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;IACvC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACzC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAEzC,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import * as util from \"./util.js\";\n\nconst url = \"ws://localhost:9080\";\n\ninterface WSListener {\n  resolve: (value?: void) => void;\n  reject: (reason?: any) => void;\n}\n\nlet conn: WebSocket | null = null;\nlet promises_open: Array<WSListener> = [];\nlet status_html = util.nonnull(document.getElementById(\"websocket_status\"));\n\nfunction promises_foreach(callback: (element: WSListener) => void) {\n  promises_open.forEach(callback);\n  promises_open.length = 0;\n}\n\nfunction make_on_message(\n  msg_handler: (data: object) => void\n): (event: MessageEvent) => void {\n  return on_message;\n\n  async function on_message(event: MessageEvent) {\n    if (event.data instanceof ArrayBuffer) {\n      throw new Error(\"unexpected arraybuffer\");\n    }\n\n    let data_raw: string;\n    if (event.data instanceof Blob) {\n      data_raw = await event.data.text();\n    } else {\n      data_raw = event.data;\n    }\n\n    let data: object = JSON.parse(data_raw);\n\n    console.log(\"got\", typeof data, JSON.stringify(data));\n    status_html.innerText = \"connected\";\n\n    msg_handler(data);\n  }\n}\n\nasync function on_open() {\n  status_html.innerText = \"connected, no message\";\n  console.log(\"ws open\");\n  promises_foreach((element) => element.resolve());\n}\n\nasync function on_close() {\n  status_html.innerText = \"not connected\";\n\n  console.log(\"ws close\");\n}\n\nasync function on_error(event: Event) {\n  console.log(\"ws error\", JSON.stringify(event));\n  promises_foreach((element) => element.reject());\n}\n\nexport function createWS(\n  message_handler: (data: object) => void\n): Promise<void> {\n  if (conn !== null) {\n    conn.close();\n  }\n\n  let promise = new Promise<void>((resolve, reject) => {\n    promises_open.push({ resolve, reject });\n  });\n\n  conn = new WebSocket(url);\n\n  conn.addEventListener(\"message\", make_on_message(message_handler));\n  conn.addEventListener(\"open\", on_open);\n  conn.addEventListener(\"close\", on_close);\n  conn.addEventListener(\"error\", on_error);\n\n  return promise;\n}\n"]}